2025-02-19 08:39:59.350 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-19 08:39:59.351 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-19 08:40:02.346 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-19 08:42:02.619 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-19 08:42:02.620 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-19 08:42:02.620 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-19 08:45:33.969 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-19 08:45:33.969 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-19 08:45:36.969 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-19 08:45:52.938 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-19 08:45:52.939 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-19 08:45:52.939 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-21 05:37:16.860 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 05:37:16.860 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 05:37:19.758 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 05:37:24.281 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:43:57.103 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:43:57.104 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:44:00.076 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:44:04.301 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:47:53.587 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:47:53.587 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:47:56.510 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:48:00.865 | ERROR    | silk.cli:main:111 - An error has been caught in function 'main', process 'MainProcess' (7501), thread 'MainThread' (139968832328128):
Traceback (most recent call last):

  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
           │         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
           │         └ <code object <module> at 0x7f4d07b6ee40, file "/root/silk/silk/cli/__main__.py", line 1>
           └ <function _run_code at 0x7f4d08646f80>
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
         └ <code object <module> at 0x7f4d07b6ee40, file "/root/silk/silk/cli/__main__.py", line 1>

  File "/root/silk/silk/cli/__main__.py", line 24, in <module>
    main()
    └ <function main at 0x7f4d07266440>

  File "/usr/local/lib/python3.10/dist-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
    └ <function _run_hydra at 0x7f4d07badd80>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
    └ <function _run_app at 0x7f4d07bade10>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
    └ <function run_and_report at 0x7f4d07badcf0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           └ <function _run_app.<locals>.<lambda> at 0x7f4d070c27a0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            │     └ <function Hydra.run at 0x7f4d07af32e0>
            └ <hydra._internal.hydra.Hydra object at 0x7f4d072ed960>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          └ <function run_job at 0x7f4d07bacee0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
    │   │              │             └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │   │              └ <function main at 0x7f4d072663b0>
    │   └ <property object at 0x7f4d07bd6de0>
    └ JobReturn(overrides=['mode=train-silk'], cfg={'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'pytho...

  File "/root/silk/silk/cli/__main__.py", line 21, in main
    silk.cli.main(cfg)
    │    │   │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │    │   └ <function main at 0x7f4d07265750>
    │    └ <module 'silk.cli' from '/root/silk/silk/cli/__init__.py'>
    └ <module 'silk' from '/root/silk/silk/__init__.py'>

> File "/root/silk/silk/cli/__init__.py", line 111, in main
    return _main(cfg, working_dir)
           │     │    └ '.'
           │     └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           └ <function _main at 0x7f4d072656c0>

  File "/root/silk/silk/cli/__init__.py", line 94, in _main
    output = _main_dispatch(cfg.mode.command, cfg)
             │              │                 └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             │              └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             └ <function _main_dispatch at 0x7f4d084adbd0>

  File "/root/silk/silk/cli/__init__.py", line 69, in _main_dispatch
    return module.main(cfg) #HERE GO SILK.CLI.TRAINING
           │      │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           │      └ <function main at 0x7f4d08672830>
           └ <module 'silk.cli.training' from '/root/silk/silk/cli/training.py'>

  File "/root/silk/silk/cli/training.py", line 90, in main
    trainer.fit(model, train_loader, val_loader) #usually this becomes train
    │       │   │      │             └ <torch.utils.data.dataloader.DataLoader object at 0x7f4d06f1e6e0>
    │       │   │      └ <torch.utils.data.dataloader.DataLoader object at 0x7f4ab0088b50>
    │       │   └ SiLKRandomHomographies(
    │       │       (_module): MixedModuleDict(
    │       │         (_mods): ModuleDict(
    │       │           (model): SiLKVGG(
    │       │             (backbone): Pa...
    │       └ <function Trainer.fit at 0x7f4acd3039a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>

  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 737, in fit
    self._call_and_handle_interrupt(
    │    └ <function Trainer._call_and_handle_interrupt at 0x7f4acd303880>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 682, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           │           │       └ {}
           │           └ (SiLKRandomHomographies(
           │               (_module): MixedModuleDict(
           │                 (_mods): ModuleDict(
           │                   (model): SiLKVGG(
           │                     (backbone): P...
           └ <bound method Trainer._fit_impl of <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 772, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
    │    │    │                └ None
    │    │    └ SiLKRandomHomographies(
    │    │        (_module): MixedModuleDict(
    │    │          (_mods): ModuleDict(
    │    │            (model): SiLKVGG(
    │    │              (backbone): Pa...
    │    └ <function Trainer._run at 0x7f4acd3243a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1195, in _run
    self._dispatch()
    │    └ <function Trainer._dispatch at 0x7f4acd3245e0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1274, in _dispatch
    self.training_type_plugin.start_training(self)
    │    │                                   └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
    │    └ <property object at 0x7f4acd307b50>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 202, in start_training
    self._results = trainer.run_stage()
    │    │          │       └ <function Trainer.run_stage at 0x7f4acd324670>
    │    │          └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
    │    └ None
    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f4acd31e320>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1284, in run_stage
    return self._run_train()
           │    └ <function Trainer._run_train at 0x7f4acd324790>
           └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1306, in _run_train
    self._run_sanity_check(self.lightning_module)
    │    │                 │    └ <property object at 0x7f4acd3280e0>
    │    │                 └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
    │    └ <function Trainer._run_sanity_check at 0x7f4acd324940>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1370, in _run_sanity_check
    self._evaluation_loop.run()
    │    └ <property object at 0x7f4acd329580>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4a9c31ad10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ ()
    │    └ <function EvaluationLoop.advance at 0x7f4acd2b4d30>
    └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f4a9c31be50>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 109, in advance
    dl_outputs = self.epoch_loop.run(dataloader, dataloader_idx, dl_max_batches, self.num_dataloaders)
                 │    │          │   │           │               │               │    └ <property object at 0x7f4ace5d84a0>
                 │    │          │   │           │               │               └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f4a9c31be50>
                 │    │          │   │           │               └ 2
                 │    │          │   │           └ 0
                 │    │          │   └ <pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f4acd14a350>
                 │    │          └ <function Loop.run at 0x7f4acd24ab00>
                 │    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4acd31f430>
                 └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f4a9c31be50>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ (<pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f4acd14a350>, 0, 2, 1)
    │    └ <function EvaluationEpochLoop.advance at 0x7f4acd2a1e10>
    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4acd31f430>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 123, in advance
    output = self._evaluation_step(batch, batch_idx, dataloader_idx)
             │    │                │      │          └ 0
             │    │                │      └ 0
             │    │                └ NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
             │    │                            [  9,   8,   7,  ...,  37,  62,  47],
             │    │                     ...
             │    └ <function EvaluationEpochLoop._evaluation_step at 0x7f4acd2a2290>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4acd31f430>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 215, in _evaluation_step
    output = self.trainer.accelerator.validation_step(step_kwargs)
             │    │                                   └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
             │    │                                               [  9,   8,   7,  ....
             │    └ <property object at 0x7f4acd3fb880>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4acd31f430>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/accelerators/accelerator.py", line 236, in validation_step
    return self.training_type_plugin.validation_step(*step_kwargs.values())
           │    │                    │                │           └ <method 'values' of 'collections.OrderedDict' objects>
           │    │                    │                └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │    │                    │                            [  9,   8,   7,  ....
           │    │                    └ <function DDPPlugin.validation_step at 0x7f4b104c1b40>
           │    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f4acd31e320>
           └ <pytorch_lightning.accelerators.gpu.GPUAccelerator object at 0x7f4acd31fcd0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/ddp.py", line 444, in validation_step
    return self.model(*args, **kwargs)
           │    │      │       └ {}
           │    │      └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │    │                  [  9,   8,   7,  ...,  37,  62,  47],
           │    │          ...
           │    └ <property object at 0x7f4b104b1a80>
           └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f4acd31e320>
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │    │                       [  9,   8,   7,  ...,  37,  62,  47],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f4bb63d45e0>
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │                         [  9,   8,   7,  ...,  37,  62,  47],
           │                 ...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1523, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
         │    │                 │         └ {}
         │    │                 └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
         │    │                             [  9,   8,   7,  ...,  37,  62,  47],
         │    │                     ...
         │    └ <function DistributedDataParallel._run_ddp_forward at 0x7f4bb6010280>
         └ DistributedDataParallel(
             (module): LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1359, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
           │            │         └ {}
           │            └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │                        [  9,   8,   7,  ...,  37,  62,  47],
           │                ...
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │    │                       [  9,   8,   7,  ...,  37,  62,  47],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f4bb63d45e0>
           └ LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): MixedModuleDict(
                   (_mods): ModuleDict(
               ...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │                         [  9,   8,   7,  ...,  37,  62,  47],
           │                 ...
           └ <bound method _LightningModuleWrapperBase.forward of LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_mo...
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/overrides/base.py", line 92, in forward
    output = self.module.validation_step(*inputs, **kwargs)
             │                            │         └ {}
             │                            └ (NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
             │                                        [  9,   8,   7,  ...,  37,  62,  47],
             │                                ...
             └ LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): MixedModuleDict(
                     (_mods): ModuleDict(
                 ...

  File "/root/silk/silk/models/silk.py", line 527, in validation_step
    return self._total_loss(
           │    └ <function SiLKBase._total_loss at 0x7f4ab7b43250>
           └ SiLKRandomHomographies(
               (_module): MixedModuleDict(
                 (_mods): ModuleDict(
                   (model): SiLKVGG(
                     (backbone): Pa...

  File "/root/silk/silk/models/silk.py", line 489, in _total_loss
    self._loss_fn(
    │    └ <silk.flow.FixedOutputFlow object at 0x7f4ab677af80>
    └ SiLKRandomHomographies(
        (_module): MixedModuleDict(
          (_mods): ModuleDict(
            (model): SiLKVGG(
              (backbone): Pa...

  File "/root/silk/silk/flow.py", line 307, in __call__
    return self._flow.flow_from_tape(self._tape, self._output_indexes, inputs)
           │    │     │              │    │      │    │                └ {'batch': NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
           │    │     │              │    │      │    │                            [  9,   8,   7,  ...,  37,  62,...
           │    │     │              │    │      │    └ (38, 39, 40, 41)
           │    │     │              │    │      └ <silk.flow.FixedOutputFlow object at 0x7f4ab677af80>
           │    │     │              │    └ ((0, ()), (1, ()), (2, [0]), (3, ()), (4, ()), (5, ()), (6, ()), (7, ()), (8, ()), (9, ()), (10, ()), (11, ()), (12, [2]), (1...
           │    │     │              └ <silk.flow.FixedOutputFlow object at 0x7f4ab677af80>
           │    │     └ <function Flow.flow_from_tape at 0x7f4ac24a0160>
           │    └ <silk.flow.Flow object at 0x7f4ab677ba30>
           └ <silk.flow.FixedOutputFlow object at 0x7f4ab677af80>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'batch': NamedContext({'image_1': (tensor([[[[  8,  10,  10,  ...,  37,  61,  47],
    │       │        │    │            │      │                    [  9,   8,   7,  ...,  37,  62,...
    │       │        │    │            │      └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
    │       │        │    │            │          ...
    │       │        │    │            └ 17
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7f4ab677b160>, <silk.flow._InputExtraction object at 0x7f4ab677bac0>, <silk.flow._Fu...
    │       │        └ <silk.flow.Flow object at 0x7f4ab677ba30>
    │       └ 17
    └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
        ...

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7f4d083404f0>
           │    │          │         │       └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    │          │         └ <property object at 0x7f4d083404a0>
           │    │          └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    └ <bound method AutoForward.forward_flow of SiLKVGG(
           │        (backbone): ParametricVGG(
           │          (mp): Identity()
           │          (layers): ModuleList...
           └ <silk.flow._FunctionCall object at 0x7f4ab0088340>

  File "/root/silk/silk/flow.py", line 332, in forward_flow
    return self._flow(outputs, *args, **kwargs)
           │    │     │         │       └ {'images': tensor([[[[0.0286, 0.0347, 0.0556,  ..., 0.1927, 0.1796, 0.1009],
           │    │     │         │                   [0.0320, 0.0369, 0.0608,  ..., 0.1927,...
           │    │     │         └ ()
           │    │     └ ('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms')
           │    └ <silk.flow.Flow object at 0x7f4ab7b503d0>
           └ SiLKVGG(
               (backbone): ParametricVGG(
                 (mp): Identity()
                 (layers): ModuleList(
                   (0): Sequential(
                     (0): Sequ...

  File "/root/silk/silk/flow.py", line 244, in flow
    return self.flow_from_tape(tape, output_indexes, inputs)
           │    │              │     │               └ {'images': tensor([[[[0.0286, 0.0347, 0.0556,  ..., 0.1927, 0.1796, 0.1009],
           │    │              │     │                           [0.0320, 0.0369, 0.0608,  ..., 0.1927,...
           │    │              │     └ (10, 2, 14, 13, 6)
           │    │              └ ((0, ()), (1, [0]), (2, ()), (3, [1]), (4, ()), (5, [4]), (6, [5]), (7, ()), (8, [7]), (10, ()), (13, [3]), (14, [8]))
           │    └ <function Flow.flow_from_tape at 0x7f4ac24a0160>
           └ <silk.flow.Flow object at 0x7f4ab7b503d0>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'images': tensor([[[[0.0286, 0.0347, 0.0556,  ..., 0.1927, 0.1796, 0.1009],
    │       │        │    │            │      │                    [0.0320, 0.0369, 0.0608,  ..., 0.1927,...
    │       │        │    │            │      └ [None, None, tensor([[[[ 1.8399,  1.1169,  0.3593,  ...,  1.4656,  1.4637,  1.5047],
    │       │        │    │            │                  [ 0.5438, -0.0781, -0.2848,  ....
    │       │        │    │            └ 7
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7f4ab67b8550>, <silk.flow._FunctionCall object at 0x7f4ab67b8850>, <silk.flow._Funct...
    │       │        └ <silk.flow.Flow object at 0x7f4ab7b503d0>
    │       └ 7
    └ [None, None, tensor([[[[ 1.8399,  1.1169,  0.3593,  ...,  1.4656,  1.4637,  1.5047],
                [ 0.5438, -0.0781, -0.2848,  ....

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7f4d083404f0>
           │    │          │         │       └ <BoundArguments (prob_map=tensor([[[0.8629, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
           │    │          │         │                  [0.0000, 0.0000, 0.0000, ...
           │    │          │         └ <property object at 0x7f4d083404a0>
           │    │          └ <BoundArguments (prob_map=tensor([[[0.8629, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
           │    │                     [0.0000, 0.0000, 0.0000, ...
           │    └ <function prob_map_to_positions_with_prob at 0x7f4ac2466950>
           └ <silk.flow._FunctionCall object at 0x7f4acd1647f0>

  File "/root/silk/silk/backbones/superpoint/utils.py", line 515, in prob_map_to_positions_with_prob
    print("3 ", positions.requires_grad)
                └ (tensor([[ 0.5000,  0.5000],
                          [ 0.5000, 15.5000],
                          [ 0.5000, 16.5000],
                          ...,
                          [70.5000, 59.5000],...

AttributeError: 'tuple' object has no attribute 'requires_grad'
2025-02-21 06:48:01.052 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:48:24.836 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:48:24.837 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:48:27.735 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:48:31.955 | ERROR    | silk.cli:main:111 - An error has been caught in function 'main', process 'MainProcess' (9224), thread 'MainThread' (140490936050112):
Traceback (most recent call last):

  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
           │         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
           │         └ <code object <module> at 0x7fc697866e40, file "/root/silk/silk/cli/__main__.py", line 1>
           └ <function _run_code at 0x7fc698336f80>
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
         └ <code object <module> at 0x7fc697866e40, file "/root/silk/silk/cli/__main__.py", line 1>

  File "/root/silk/silk/cli/__main__.py", line 24, in <module>
    main()
    └ <function main at 0x7fc696f26440>

  File "/usr/local/lib/python3.10/dist-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
    └ <function _run_hydra at 0x7fc6978a5d80>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
    └ <function _run_app at 0x7fc6978a5e10>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
    └ <function run_and_report at 0x7fc6978a5cf0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           └ <function _run_app.<locals>.<lambda> at 0x7fc696fde7a0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            │     └ <function Hydra.run at 0x7fc6977eb2e0>
            └ <hydra._internal.hydra.Hydra object at 0x7fc696fad8d0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          └ <function run_job at 0x7fc6978a4ee0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
    │   │              │             └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │   │              └ <function main at 0x7fc696f263b0>
    │   └ <property object at 0x7fc697f6a1b0>
    └ JobReturn(overrides=['mode=train-silk'], cfg={'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'pytho...

  File "/root/silk/silk/cli/__main__.py", line 21, in main
    silk.cli.main(cfg)
    │    │   │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │    │   └ <function main at 0x7fc696f25750>
    │    └ <module 'silk.cli' from '/root/silk/silk/cli/__init__.py'>
    └ <module 'silk' from '/root/silk/silk/__init__.py'>

> File "/root/silk/silk/cli/__init__.py", line 111, in main
    return _main(cfg, working_dir)
           │     │    └ '.'
           │     └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           └ <function _main at 0x7fc696f256c0>

  File "/root/silk/silk/cli/__init__.py", line 94, in _main
    output = _main_dispatch(cfg.mode.command, cfg)
             │              │                 └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             │              └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             └ <function _main_dispatch at 0x7fc69819dbd0>

  File "/root/silk/silk/cli/__init__.py", line 69, in _main_dispatch
    return module.main(cfg) #HERE GO SILK.CLI.TRAINING
           │      │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           │      └ <function main at 0x7fc69835e830>
           └ <module 'silk.cli.training' from '/root/silk/silk/cli/training.py'>

  File "/root/silk/silk/cli/training.py", line 90, in main
    trainer.fit(model, train_loader, val_loader) #usually this becomes train
    │       │   │      │             └ <torch.utils.data.dataloader.DataLoader object at 0x7fc695b8e980>
    │       │   │      └ <torch.utils.data.dataloader.DataLoader object at 0x7fc42e035630>
    │       │   └ SiLKRandomHomographies(
    │       │       (_module): MixedModuleDict(
    │       │         (_mods): ModuleDict(
    │       │           (model): SiLKVGG(
    │       │             (backbone): Pa...
    │       └ <function Trainer.fit at 0x7fc45cfef9a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>

  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 737, in fit
    self._call_and_handle_interrupt(
    │    └ <function Trainer._call_and_handle_interrupt at 0x7fc45cfef880>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 682, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           │           │       └ {}
           │           └ (SiLKRandomHomographies(
           │               (_module): MixedModuleDict(
           │                 (_mods): ModuleDict(
           │                   (model): SiLKVGG(
           │                     (backbone): P...
           └ <bound method Trainer._fit_impl of <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 772, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
    │    │    │                └ None
    │    │    └ SiLKRandomHomographies(
    │    │        (_module): MixedModuleDict(
    │    │          (_mods): ModuleDict(
    │    │            (model): SiLKVGG(
    │    │              (backbone): Pa...
    │    └ <function Trainer._run at 0x7fc45d0103a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1195, in _run
    self._dispatch()
    │    └ <function Trainer._dispatch at 0x7fc45d0105e0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1274, in _dispatch
    self.training_type_plugin.start_training(self)
    │    │                                   └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
    │    └ <property object at 0x7fc45cff78d0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 202, in start_training
    self._results = trainer.run_stage()
    │    │          │       └ <function Trainer.run_stage at 0x7fc45d010670>
    │    │          └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
    │    └ None
    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7fc42debf4f0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1284, in run_stage
    return self._run_train()
           │    └ <function Trainer._run_train at 0x7fc45d010790>
           └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1306, in _run_train
    self._run_sanity_check(self.lightning_module)
    │    │                 │    └ <property object at 0x7fc45cff7e20>
    │    │                 └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
    │    └ <function Trainer._run_sanity_check at 0x7fc45d010940>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1370, in _run_sanity_check
    self._evaluation_loop.run()
    │    └ <property object at 0x7fc45d015300>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7fc42debfdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ ()
    │    └ <function EvaluationLoop.advance at 0x7fc45cfa0d30>
    └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7fc45d006380>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 109, in advance
    dl_outputs = self.epoch_loop.run(dataloader, dataloader_idx, dl_max_batches, self.num_dataloaders)
                 │    │          │   │           │               │               │    └ <property object at 0x7fc45cf6f830>
                 │    │          │   │           │               │               └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7fc45d006380>
                 │    │          │   │           │               └ 2
                 │    │          │   │           └ 0
                 │    │          │   └ <pytorch_lightning.utilities.fetching.DataFetcher object at 0x7fc45ce326b0>
                 │    │          └ <function Loop.run at 0x7fc45cf36b00>
                 │    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7fc42debecb0>
                 └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7fc45d006380>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ (<pytorch_lightning.utilities.fetching.DataFetcher object at 0x7fc45ce326b0>, 0, 2, 1)
    │    └ <function EvaluationEpochLoop.advance at 0x7fc45cf8de10>
    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7fc42debecb0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 123, in advance
    output = self._evaluation_step(batch, batch_idx, dataloader_idx)
             │    │                │      │          └ 0
             │    │                │      └ 0
             │    │                └ NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
             │    │                            [174, 178, 180,  ...,  84,  68,  58],
             │    │                     ...
             │    └ <function EvaluationEpochLoop._evaluation_step at 0x7fc45cf8e290>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7fc42debecb0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 215, in _evaluation_step
    output = self.trainer.accelerator.validation_step(step_kwargs)
             │    │                                   └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
             │    │                                               [174, 178, 180,  ....
             │    └ <property object at 0x7fc45d0ef790>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7fc42debecb0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/accelerators/accelerator.py", line 236, in validation_step
    return self.training_type_plugin.validation_step(*step_kwargs.values())
           │    │                    │                │           └ <method 'values' of 'collections.OrderedDict' objects>
           │    │                    │                └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │    │                    │                            [174, 178, 180,  ....
           │    │                    └ <function DDPPlugin.validation_step at 0x7fc4a01b5b40>
           │    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7fc42debf4f0>
           └ <pytorch_lightning.accelerators.gpu.GPUAccelerator object at 0x7fc42debd1b0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/ddp.py", line 444, in validation_step
    return self.model(*args, **kwargs)
           │    │      │       └ {}
           │    │      └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │    │                  [174, 178, 180,  ...,  84,  68,  58],
           │    │          ...
           │    └ <property object at 0x7fc4a01a58f0>
           └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7fc42debf4f0>
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │    │                       [174, 178, 180,  ...,  84,  68,  58],
           │    │               ...
           │    └ <function Module._call_impl at 0x7fc5461c45e0>
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │                         [174, 178, 180,  ...,  84,  68,  58],
           │                 ...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1523, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
         │    │                 │         └ {}
         │    │                 └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
         │    │                             [174, 178, 180,  ...,  84,  68,  58],
         │    │                     ...
         │    └ <function DistributedDataParallel._run_ddp_forward at 0x7fc545e04280>
         └ DistributedDataParallel(
             (module): LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1359, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
           │            │         └ {}
           │            └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │                        [174, 178, 180,  ...,  84,  68,  58],
           │                ...
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │    │                       [174, 178, 180,  ...,  84,  68,  58],
           │    │               ...
           │    └ <function Module._call_impl at 0x7fc5461c45e0>
           └ LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): MixedModuleDict(
                   (_mods): ModuleDict(
               ...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │                         [174, 178, 180,  ...,  84,  68,  58],
           │                 ...
           └ <bound method _LightningModuleWrapperBase.forward of LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_mo...
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/overrides/base.py", line 92, in forward
    output = self.module.validation_step(*inputs, **kwargs)
             │                            │         └ {}
             │                            └ (NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
             │                                        [174, 178, 180,  ...,  84,  68,  58],
             │                                ...
             └ LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): MixedModuleDict(
                     (_mods): ModuleDict(
                 ...

  File "/root/silk/silk/models/silk.py", line 527, in validation_step
    return self._total_loss(
           │    └ <function SiLKBase._total_loss at 0x7fc447893250>
           └ SiLKRandomHomographies(
               (_module): MixedModuleDict(
                 (_mods): ModuleDict(
                   (model): SiLKVGG(
                     (backbone): Pa...

  File "/root/silk/silk/models/silk.py", line 489, in _total_loss
    self._loss_fn(
    │    └ <silk.flow.FixedOutputFlow object at 0x7fc4464a89d0>
    └ SiLKRandomHomographies(
        (_module): MixedModuleDict(
          (_mods): ModuleDict(
            (model): SiLKVGG(
              (backbone): Pa...

  File "/root/silk/silk/flow.py", line 307, in __call__
    return self._flow.flow_from_tape(self._tape, self._output_indexes, inputs)
           │    │     │              │    │      │    │                └ {'batch': NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
           │    │     │              │    │      │    │                            [174, 178, 180,  ...,  84,  68,...
           │    │     │              │    │      │    └ (38, 39, 40, 41)
           │    │     │              │    │      └ <silk.flow.FixedOutputFlow object at 0x7fc4464a89d0>
           │    │     │              │    └ ((0, ()), (1, ()), (2, [0]), (3, ()), (4, ()), (5, ()), (6, ()), (7, ()), (8, ()), (9, ()), (10, ()), (11, ()), (12, [2]), (1...
           │    │     │              └ <silk.flow.FixedOutputFlow object at 0x7fc4464a89d0>
           │    │     └ <function Flow.flow_from_tape at 0x7fc45209c1f0>
           │    └ <silk.flow.Flow object at 0x7fc446467c40>
           └ <silk.flow.FixedOutputFlow object at 0x7fc4464a89d0>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'batch': NamedContext({'image_1': (tensor([[[[179, 183, 186,  ...,  71,  81,  87],
    │       │        │    │            │      │                    [174, 178, 180,  ...,  84,  68,...
    │       │        │    │            │      └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
    │       │        │    │            │          ...
    │       │        │    │            └ 17
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7fc44789c640>, <silk.flow._InputExtraction object at 0x7fc44789d720>, <silk.flow._Fu...
    │       │        └ <silk.flow.Flow object at 0x7fc446467c40>
    │       └ 17
    └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
        ...

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7fc6980245e0>
           │    │          │         │       └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    │          │         └ <property object at 0x7fc698024590>
           │    │          └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    └ <bound method AutoForward.forward_flow of SiLKVGG(
           │        (backbone): ParametricVGG(
           │          (mp): Identity()
           │          (layers): ModuleList...
           └ <silk.flow._FunctionCall object at 0x7fc42e034ee0>

  File "/root/silk/silk/flow.py", line 332, in forward_flow
    return self._flow(outputs, *args, **kwargs)
           │    │     │         │       └ {'images': tensor([[[[0.6262, 0.6355, 0.6459,  ..., 0.2534, 0.2914, 0.3069],
           │    │     │         │                   [0.6172, 0.6264, 0.6384,  ..., 0.2214,...
           │    │     │         └ ()
           │    │     └ ('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms')
           │    └ <silk.flow.Flow object at 0x7fc4464a8a90>
           └ SiLKVGG(
               (backbone): ParametricVGG(
                 (mp): Identity()
                 (layers): ModuleList(
                   (0): Sequential(
                     (0): Sequ...

  File "/root/silk/silk/flow.py", line 244, in flow
    return self.flow_from_tape(tape, output_indexes, inputs)
           │    │              │     │               └ {'images': tensor([[[[0.6262, 0.6355, 0.6459,  ..., 0.2534, 0.2914, 0.3069],
           │    │              │     │                           [0.6172, 0.6264, 0.6384,  ..., 0.2214,...
           │    │              │     └ (10, 2, 14, 13, 6)
           │    │              └ ((0, ()), (1, [0]), (2, ()), (3, [1]), (4, ()), (5, [4]), (6, [5]), (7, ()), (8, [7]), (10, ()), (13, [3]), (14, [8]))
           │    └ <function Flow.flow_from_tape at 0x7fc45209c1f0>
           └ <silk.flow.Flow object at 0x7fc4464a8a90>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'images': tensor([[[[0.6262, 0.6355, 0.6459,  ..., 0.2534, 0.2914, 0.3069],
    │       │        │    │            │      │                    [0.6172, 0.6264, 0.6384,  ..., 0.2214,...
    │       │        │    │            │      └ [None, None, tensor([[[[-0.6028, -0.5782, -0.5656,  ..., -0.1433, -0.2121, -0.1182],
    │       │        │    │            │                  [-0.3316, -0.3314, -0.2973,  ....
    │       │        │    │            └ 13
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7fc4464a8a00>, <silk.flow._FunctionCall object at 0x7fc4464a8220>, <silk.flow._Funct...
    │       │        └ <silk.flow.Flow object at 0x7fc4464a8a90>
    │       └ 13
    └ [None, None, tensor([[[[-0.6028, -0.5782, -0.5656,  ..., -0.1433, -0.2121, -0.1182],
                [-0.3316, -0.3314, -0.2973,  ....

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7fc6980245e0>
           │    │          │         │       └ <BoundArguments (raw_descriptors=tensor([[[[-1.7650e+00, -1.7094e+00, -1.3920e+00,  ...,  3.9333e-01,
           │    │          │         │                     4.6331e-01,...
           │    │          │         └ <property object at 0x7fc698024590>
           │    │          └ <BoundArguments (raw_descriptors=tensor([[[[-1.7650e+00, -1.7094e+00, -1.3920e+00,  ...,  3.9333e-01,
           │    │                        4.6331e-01,...
           │    └ functools.partial(<function SiLKVGG.sparsify_descriptors at 0x7fc447891480>, scale_factor=Parameter containing:
           │      tensor(1.4100...
           └ <silk.flow._FunctionCall object at 0x7fc4464a9ab0>

  File "/root/silk/silk/backbones/silk/silk.py", line 388, in sparsify_descriptors
    print("5 ", sparse_descriptors.requires_grad)
                └ [tensor([[ 0.1492, -0.0508, -0.1641,  ..., -0.0833,  0.2032, -0.0437],
                          [ 0.1739, -0.1829, -0.1560,  ..., -0.1029,  0....

AttributeError: 'list' object has no attribute 'requires_grad'
2025-02-21 06:48:32.204 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:52:57.404 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:52:57.405 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:53:00.330 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:53:04.458 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:53:27.060 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:53:27.061 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:53:29.987 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:53:34.360 | ERROR    | silk.cli:main:111 - An error has been caught in function 'main', process 'MainProcess' (12670), thread 'MainThread' (139982818587072):
Traceback (most recent call last):

  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
           │         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
           │         └ <code object <module> at 0x7f50495cee40, file "/root/silk/silk/cli/__main__.py", line 1>
           └ <function _run_code at 0x7f504a09af80>
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
         └ <code object <module> at 0x7f50495cee40, file "/root/silk/silk/cli/__main__.py", line 1>

  File "/root/silk/silk/cli/__main__.py", line 24, in <module>
    main()
    └ <function main at 0x7f5048c9a440>

  File "/usr/local/lib/python3.10/dist-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
    └ <function _run_hydra at 0x7f504960dd80>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
    └ <function _run_app at 0x7f504960de10>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
    └ <function run_and_report at 0x7f504960dcf0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           └ <function _run_app.<locals>.<lambda> at 0x7f5048b127a0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            │     └ <function Hydra.run at 0x7f50495572e0>
            └ <hydra._internal.hydra.Hydra object at 0x7f5048d21960>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          └ <function run_job at 0x7f504960cee0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
    │   │              │             └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │   │              └ <function main at 0x7f5048c9a3b0>
    │   └ <property object at 0x7f5049636e80>
    └ JobReturn(overrides=['mode=train-silk'], cfg={'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'pytho...

  File "/root/silk/silk/cli/__main__.py", line 21, in main
    silk.cli.main(cfg)
    │    │   │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │    │   └ <function main at 0x7f5048c99750>
    │    └ <module 'silk.cli' from '/root/silk/silk/cli/__init__.py'>
    └ <module 'silk' from '/root/silk/silk/__init__.py'>

> File "/root/silk/silk/cli/__init__.py", line 111, in main
    return _main(cfg, working_dir)
           │     │    └ '.'
           │     └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           └ <function _main at 0x7f5048c996c0>

  File "/root/silk/silk/cli/__init__.py", line 94, in _main
    output = _main_dispatch(cfg.mode.command, cfg)
             │              │                 └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             │              └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             └ <function _main_dispatch at 0x7f5049f05bd0>

  File "/root/silk/silk/cli/__init__.py", line 69, in _main_dispatch
    return module.main(cfg) #HERE GO SILK.CLI.TRAINING
           │      │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           │      └ <function main at 0x7f504a0c6830>
           └ <module 'silk.cli.training' from '/root/silk/silk/cli/training.py'>

  File "/root/silk/silk/cli/training.py", line 90, in main
    trainer.fit(model, train_loader, val_loader) #usually this becomes train
    │       │   │      │             └ <torch.utils.data.dataloader.DataLoader object at 0x7f50479929b0>
    │       │   │      └ <torch.utils.data.dataloader.DataLoader object at 0x7f4dd5d51630>
    │       │   └ SiLKRandomHomographies(
    │       │       (_module): MixedModuleDict(
    │       │         (_mods): ModuleDict(
    │       │           (model): SiLKVGG(
    │       │             (backbone): Pa...
    │       └ <function Trainer.fit at 0x7f4e0ed579a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>

  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 737, in fit
    self._call_and_handle_interrupt(
    │    └ <function Trainer._call_and_handle_interrupt at 0x7f4e0ed57880>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 682, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           │           │       └ {}
           │           └ (SiLKRandomHomographies(
           │               (_module): MixedModuleDict(
           │                 (_mods): ModuleDict(
           │                   (model): SiLKVGG(
           │                     (backbone): P...
           └ <bound method Trainer._fit_impl of <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 772, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
    │    │    │                └ None
    │    │    └ SiLKRandomHomographies(
    │    │        (_module): MixedModuleDict(
    │    │          (_mods): ModuleDict(
    │    │            (model): SiLKVGG(
    │    │              (backbone): Pa...
    │    └ <function Trainer._run at 0x7f4e0ed783a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1195, in _run
    self._dispatch()
    │    └ <function Trainer._dispatch at 0x7f4e0ed785e0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1274, in _dispatch
    self.training_type_plugin.start_training(self)
    │    │                                   └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
    │    └ <property object at 0x7f4e0ed5f920>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 202, in start_training
    self._results = trainer.run_stage()
    │    │          │       └ <function Trainer.run_stage at 0x7f4e0ed78670>
    │    │          └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
    │    └ None
    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f4dd5cdb4f0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1284, in run_stage
    return self._run_train()
           │    └ <function Trainer._run_train at 0x7f4e0ed78790>
           └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1306, in _run_train
    self._run_sanity_check(self.lightning_module)
    │    │                 │    └ <property object at 0x7f4e0ed5fe70>
    │    │                 └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
    │    └ <function Trainer._run_sanity_check at 0x7f4e0ed78940>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1370, in _run_sanity_check
    self._evaluation_loop.run()
    │    └ <property object at 0x7f4e0ed7d350>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f4dd5cdbdc0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ ()
    │    └ <function EvaluationLoop.advance at 0x7f4e0ed08d30>
    └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f4e0ed6e380>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 109, in advance
    dl_outputs = self.epoch_loop.run(dataloader, dataloader_idx, dl_max_batches, self.num_dataloaders)
                 │    │          │   │           │               │               │    └ <property object at 0x7f4e0ecdb8d0>
                 │    │          │   │           │               │               └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f4e0ed6e380>
                 │    │          │   │           │               └ 2
                 │    │          │   │           └ 0
                 │    │          │   └ <pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f4e0eb9e6b0>
                 │    │          └ <function Loop.run at 0x7f4e0ec9eb00>
                 │    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4dd5cdacb0>
                 └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f4e0ed6e380>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ (<pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f4e0eb9e6b0>, 0, 2, 1)
    │    └ <function EvaluationEpochLoop.advance at 0x7f4e0ecf5e10>
    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4dd5cdacb0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 123, in advance
    output = self._evaluation_step(batch, batch_idx, dataloader_idx)
             │    │                │      │          └ 0
             │    │                │      └ 0
             │    │                └ NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
             │    │                            [ 70,  58,  88,  ..., 181, 182, 183],
             │    │                     ...
             │    └ <function EvaluationEpochLoop._evaluation_step at 0x7f4e0ecf6290>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4dd5cdacb0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 215, in _evaluation_step
    output = self.trainer.accelerator.validation_step(step_kwargs)
             │    │                                   └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
             │    │                                               [ 70,  58,  88,  ....
             │    └ <property object at 0x7f4e0ee53740>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f4dd5cdacb0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/accelerators/accelerator.py", line 236, in validation_step
    return self.training_type_plugin.validation_step(*step_kwargs.values())
           │    │                    │                │           └ <method 'values' of 'collections.OrderedDict' objects>
           │    │                    │                └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │    │                    │                            [ 70,  58,  88,  ....
           │    │                    └ <function DDPPlugin.validation_step at 0x7f4e51f01b40>
           │    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f4dd5cdb4f0>
           └ <pytorch_lightning.accelerators.gpu.GPUAccelerator object at 0x7f4dd5cd91b0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/ddp.py", line 444, in validation_step
    return self.model(*args, **kwargs)
           │    │      │       └ {}
           │    │      └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │    │                  [ 70,  58,  88,  ..., 181, 182, 183],
           │    │          ...
           │    └ <property object at 0x7f4e51ef1990>
           └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f4dd5cdb4f0>
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │    │                       [ 70,  58,  88,  ..., 181, 182, 183],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f4ef7fcc5e0>
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │                         [ 70,  58,  88,  ..., 181, 182, 183],
           │                 ...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1523, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
         │    │                 │         └ {}
         │    │                 └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
         │    │                             [ 70,  58,  88,  ..., 181, 182, 183],
         │    │                     ...
         │    └ <function DistributedDataParallel._run_ddp_forward at 0x7f4ef7c0c280>
         └ DistributedDataParallel(
             (module): LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1359, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
           │            │         └ {}
           │            └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │                        [ 70,  58,  88,  ..., 181, 182, 183],
           │                ...
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │    │                       [ 70,  58,  88,  ..., 181, 182, 183],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f4ef7fcc5e0>
           └ LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): MixedModuleDict(
                   (_mods): ModuleDict(
               ...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │                         [ 70,  58,  88,  ..., 181, 182, 183],
           │                 ...
           └ <bound method _LightningModuleWrapperBase.forward of LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_mo...
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/overrides/base.py", line 92, in forward
    output = self.module.validation_step(*inputs, **kwargs)
             │                            │         └ {}
             │                            └ (NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
             │                                        [ 70,  58,  88,  ..., 181, 182, 183],
             │                                ...
             └ LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): MixedModuleDict(
                     (_mods): ModuleDict(
                 ...

  File "/root/silk/silk/models/silk.py", line 527, in validation_step
    return self._total_loss(
           │    └ <function SiLKBase._total_loss at 0x7f4df97df370>
           └ SiLKRandomHomographies(
               (_module): MixedModuleDict(
                 (_mods): ModuleDict(
                   (model): SiLKVGG(
                     (backbone): Pa...

  File "/root/silk/silk/models/silk.py", line 489, in _total_loss
    self._loss_fn(
    │    └ <silk.flow.FixedOutputFlow object at 0x7f4df81f09d0>
    └ SiLKRandomHomographies(
        (_module): MixedModuleDict(
          (_mods): ModuleDict(
            (model): SiLKVGG(
              (backbone): Pa...

  File "/root/silk/silk/flow.py", line 307, in __call__
    return self._flow.flow_from_tape(self._tape, self._output_indexes, inputs)
           │    │     │              │    │      │    │                └ {'batch': NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
           │    │     │              │    │      │    │                            [ 70,  58,  88,  ..., 181, 182,...
           │    │     │              │    │      │    └ (38, 39, 40, 41)
           │    │     │              │    │      └ <silk.flow.FixedOutputFlow object at 0x7f4df81f09d0>
           │    │     │              │    └ ((0, ()), (1, ()), (2, [0]), (3, ()), (4, ()), (5, ()), (6, ()), (7, ()), (8, ()), (9, ()), (10, ()), (11, ()), (12, [2]), (1...
           │    │     │              └ <silk.flow.FixedOutputFlow object at 0x7f4df81f09d0>
           │    │     └ <function Flow.flow_from_tape at 0x7f4e03e84310>
           │    └ <silk.flow.Flow object at 0x7f4df81b3c40>
           └ <silk.flow.FixedOutputFlow object at 0x7f4df81f09d0>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'batch': NamedContext({'image_1': (tensor([[[[ 66,  85,  39,  ..., 176, 178, 178],
    │       │        │    │            │      │                    [ 70,  58,  88,  ..., 181, 182,...
    │       │        │    │            │      └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
    │       │        │    │            │          ...
    │       │        │    │            └ 17
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7f4df97e8640>, <silk.flow._InputExtraction object at 0x7f4df97e9720>, <silk.flow._Fu...
    │       │        └ <silk.flow.Flow object at 0x7f4df81b3c40>
    │       └ 17
    └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
        ...

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7f5049d94360>
           │    │          │         │       └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    │          │         └ <property object at 0x7f5049d94310>
           │    │          └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    └ <bound method AutoForward.forward_flow of SiLKVGG(
           │        (backbone): ParametricVGG(
           │          (mp): Identity()
           │          (layers): ModuleList...
           └ <silk.flow._FunctionCall object at 0x7f4dd5d50ee0>

  File "/root/silk/silk/flow.py", line 332, in forward_flow
    return self._flow(outputs, *args, **kwargs)
           │    │     │         │       └ {'images': tensor([[[[0.2784, 0.2583, 0.1979,  ..., 0.9073, 0.9096, 0.9096],
           │    │     │         │                   [0.2767, 0.2390, 0.3201,  ..., 0.9132,...
           │    │     │         └ ()
           │    │     └ ('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms')
           │    └ <silk.flow.Flow object at 0x7f4df81f0a90>
           └ SiLKVGG(
               (backbone): ParametricVGG(
                 (mp): Identity()
                 (layers): ModuleList(
                   (0): Sequential(
                     (0): Sequ...

  File "/root/silk/silk/flow.py", line 244, in flow
    return self.flow_from_tape(tape, output_indexes, inputs)
           │    │              │     │               └ {'images': tensor([[[[0.2784, 0.2583, 0.1979,  ..., 0.9073, 0.9096, 0.9096],
           │    │              │     │                           [0.2767, 0.2390, 0.3201,  ..., 0.9132,...
           │    │              │     └ (10, 2, 14, 13, 6)
           │    │              └ ((0, ()), (1, [0]), (2, ()), (3, [1]), (4, ()), (5, [4]), (6, [5]), (7, ()), (8, [7]), (10, ()), (13, [3]), (14, [8]))
           │    └ <function Flow.flow_from_tape at 0x7f4e03e84310>
           └ <silk.flow.Flow object at 0x7f4df81f0a90>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'images': tensor([[[[0.2784, 0.2583, 0.1979,  ..., 0.9073, 0.9096, 0.9096],
    │       │        │    │            │      │                    [0.2767, 0.2390, 0.3201,  ..., 0.9132,...
    │       │        │    │            │      └ [None, None, tensor([[[[ 0.7195,  0.8406,  0.7582,  ..., -1.3495, -0.9766, -0.6658],
    │       │        │    │            │                  [ 0.8463,  0.7977,  0.7265,  ....
    │       │        │    │            └ 13
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7f4df81f0a00>, <silk.flow._FunctionCall object at 0x7f4df81f0220>, <silk.flow._Funct...
    │       │        └ <silk.flow.Flow object at 0x7f4df81f0a90>
    │       └ 13
    └ [None, None, tensor([[[[ 0.7195,  0.8406,  0.7582,  ..., -1.3495, -0.9766, -0.6658],
                [ 0.8463,  0.7977,  0.7265,  ....

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7f5049d94360>
           │    │          │         │       └ <BoundArguments (raw_descriptors=tensor([[[[ 0.4255,  0.6238,  0.5022,  ..., -0.6862,  0.1968,  0.4361],
           │    │          │         │                   [ 0.6625, ...
           │    │          │         └ <property object at 0x7f5049d94310>
           │    │          └ <BoundArguments (raw_descriptors=tensor([[[[ 0.4255,  0.6238,  0.5022,  ..., -0.6862,  0.1968,  0.4361],
           │    │                      [ 0.6625, ...
           │    └ functools.partial(<function SiLKVGG.sparsify_descriptors at 0x7f4df97dd5a0>, scale_factor=Parameter containing:
           │      tensor(1.4100...
           └ <silk.flow._FunctionCall object at 0x7f4df81f1ab0>

  File "/root/silk/silk/backbones/silk/silk.py", line 388, in sparsify_descriptors
    print("5 ", sparse_descriptors.requires_grad)
                └ [tensor([[ 0.0332, -0.1303,  0.0613,  ..., -0.1489, -0.0167, -0.0301],
                          [ 0.1730,  0.0009,  0.0831,  ..., -0.1528, -0....

AttributeError: 'list' object has no attribute 'requires_grad'
2025-02-21 06:53:34.600 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:54:33.331 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:54:33.331 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:54:36.282 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:54:37.172 | ERROR    | silk.cli:main:111 - An error has been caught in function 'main', process 'MainProcess' (14393), thread 'MainThread' (140067059298752):
Traceback (most recent call last):

  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/instantiate/_instantiate2.py", line 92, in _call_target
    return _target_(*args, **kwargs)
           │         │       └ {'in_channels': 1, 'detection_threshold': 1.0, 'detection_top_k': 3000, 'nms_dist': 0, 'padding': 0, 'border_dist': 0, 'descr...
           │         └ ()
           └ <class 'silk.backbones.silk.silk.SiLKVGG'>

  File "/root/silk/silk/backbones/silk/silk.py", line 248, in __init__
    MagicPoint.add_detector_head_post_processing(
    │          └ <staticmethod(<function MagicPoint.add_detector_head_post_processing at 0x7f61a1071360>)>
    └ <class 'silk.backbones.superpoint.magicpoint.MagicPoint'>

TypeError: MagicPoint.add_detector_head_post_processing() got an unexpected keyword argument 'prefix'


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
           │         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
           │         └ <code object <module> at 0x7f63e67cee40, file "/root/silk/silk/cli/__main__.py", line 1>
           └ <function _run_code at 0x7f63e72cef80>
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
         └ <code object <module> at 0x7f63e67cee40, file "/root/silk/silk/cli/__main__.py", line 1>

  File "/root/silk/silk/cli/__main__.py", line 24, in <module>
    main()
    └ <function main at 0x7f63e5ed2440>

  File "/usr/local/lib/python3.10/dist-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
    └ <function _run_hydra at 0x7f63e680dd80>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
    └ <function _run_app at 0x7f63e680de10>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
    └ <function run_and_report at 0x7f63e680dcf0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           └ <function _run_app.<locals>.<lambda> at 0x7f63e5d427a0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            │     └ <function Hydra.run at 0x7f63e67572e0>
            └ <hydra._internal.hydra.Hydra object at 0x7f63e5f59930>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          └ <function run_job at 0x7f63e680cee0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
    │   │              │             └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │   │              └ <function main at 0x7f63e5ed23b0>
    │   └ <property object at 0x7f63e6837010>
    └ JobReturn(overrides=['mode=train-silk'], cfg={'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'pytho...

  File "/root/silk/silk/cli/__main__.py", line 21, in main
    silk.cli.main(cfg)
    │    │   │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │    │   └ <function main at 0x7f63e5ed1750>
    │    └ <module 'silk.cli' from '/root/silk/silk/cli/__init__.py'>
    └ <module 'silk' from '/root/silk/silk/__init__.py'>

> File "/root/silk/silk/cli/__init__.py", line 111, in main
    return _main(cfg, working_dir)
           │     │    └ '.'
           │     └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           └ <function _main at 0x7f63e5ed16c0>

  File "/root/silk/silk/cli/__init__.py", line 94, in _main
    output = _main_dispatch(cfg.mode.command, cfg)
             │              │                 └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             │              └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             └ <function _main_dispatch at 0x7f63e7139bd0>

  File "/root/silk/silk/cli/__init__.py", line 69, in _main_dispatch
    return module.main(cfg) #HERE GO SILK.CLI.TRAINING
           │      │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           │      └ <function main at 0x7f63e72fa830>
           └ <module 'silk.cli.training' from '/root/silk/silk/cli/training.py'>

  File "/root/silk/silk/cli/training.py", line 49, in main
    model = instantiate_and_ensure_is_instance(config.mode.model, pl.LightningModule)
            │                                  │                  │  └ <class 'pytorch_lightning.core.lightning.LightningModule'>
            │                                  │                  └ <module 'pytorch_lightning' from '/usr/local/lib/python3.10/dist-packages/pytorch_lightning/__init__.py'>
            │                                  └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
            └ <function instantiate_and_ensure_is_instance at 0x7f63e5ed1d80>

  File "/root/silk/silk/config/core.py", line 164, in instantiate_and_ensure_is_instance
    instance = instantiate(cfg)
               │           └ {'loss': {'_target_': 'silk.losses.info_nce.Loss', 'block_size': 5400, 'device': 'cuda:0', 'temperature': 0.1}, 'contextualiz...
               └ <function instantiate at 0x7f63e5ed1e10>

  File "/root/silk/silk/config/core.py", line 173, in instantiate
    return hydra.utils.instantiate(cfg)
           │     │     │           └ {'loss': {'_target_': 'silk.losses.info_nce.Loss', 'block_size': 5400, 'device': 'cuda:0', 'temperature': 0.1}, 'contextualiz...
           │     │     └ <function instantiate at 0x7f63e680e560>
           │     └ <module 'hydra.utils' from '/usr/local/lib/python3.10/dist-packages/hydra/utils.py'>
           └ <module 'hydra' from '/usr/local/lib/python3.10/dist-packages/hydra/__init__.py'>

  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/instantiate/_instantiate2.py", line 226, in instantiate
    return instantiate_node(
           └ <function instantiate_node at 0x7f63e680e680>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/instantiate/_instantiate2.py", line 342, in instantiate_node
    value = instantiate_node(
            └ <function instantiate_node at 0x7f63e680e680>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/instantiate/_instantiate2.py", line 347, in instantiate_node
    return _call_target(_target_, partial, args, kwargs, full_key)
           │            │         │        │     │       └ 'mode.model.model'
           │            │         │        │     └ {'in_channels': 1, 'detection_threshold': 1.0, 'detection_top_k': 3000, 'nms_dist': 0, 'padding': 0, 'border_dist': 0, 'descr...
           │            │         │        └ ()
           │            │         └ False
           │            └ <class 'silk.backbones.silk.silk.SiLKVGG'>
           └ <function _call_target at 0x7f63e680e320>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/instantiate/_instantiate2.py", line 97, in _call_target
    raise InstantiationException(msg) from e
          │                      └ 'Error in call to target \'silk.backbones.silk.silk.SiLKVGG\':\nTypeError("MagicPoint.add_detector_head_post_processing() got...
          └ <class 'hydra.errors.InstantiationException'>

hydra.errors.InstantiationException: Error in call to target 'silk.backbones.silk.silk.SiLKVGG':
TypeError("MagicPoint.add_detector_head_post_processing() got an unexpected keyword argument 'prefix'")
full_key: mode.model.model
2025-02-21 06:54:37.377 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:55:01.068 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:55:01.069 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:55:03.948 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:55:08.214 | ERROR    | silk.cli:main:111 - An error has been caught in function 'main', process 'MainProcess' (14524), thread 'MainThread' (139859037671872):
Traceback (most recent call last):

  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
           │         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
           │         └ <code object <module> at 0x7f337776ee40, file "/root/silk/silk/cli/__main__.py", line 1>
           └ <function _run_code at 0x7f33781eef80>
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
         └ <code object <module> at 0x7f337776ee40, file "/root/silk/silk/cli/__main__.py", line 1>

  File "/root/silk/silk/cli/__main__.py", line 24, in <module>
    main()
    └ <function main at 0x7f3376e02440>

  File "/usr/local/lib/python3.10/dist-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
    └ <function _run_hydra at 0x7f33777add80>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
    └ <function _run_app at 0x7f33777ade10>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
    └ <function run_and_report at 0x7f33777adcf0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           └ <function _run_app.<locals>.<lambda> at 0x7f3376c667a0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            │     └ <function Hydra.run at 0x7f33776f32e0>
            └ <hydra._internal.hydra.Hydra object at 0x7f3376e8d900>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          └ <function run_job at 0x7f33777acee0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
    │   │              │             └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │   │              └ <function main at 0x7f3376e023b0>
    │   └ <property object at 0x7f3377c99f30>
    └ JobReturn(overrides=['mode=train-silk'], cfg={'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'pytho...

  File "/root/silk/silk/cli/__main__.py", line 21, in main
    silk.cli.main(cfg)
    │    │   │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │    │   └ <function main at 0x7f3376e01750>
    │    └ <module 'silk.cli' from '/root/silk/silk/cli/__init__.py'>
    └ <module 'silk' from '/root/silk/silk/__init__.py'>

> File "/root/silk/silk/cli/__init__.py", line 111, in main
    return _main(cfg, working_dir)
           │     │    └ '.'
           │     └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           └ <function _main at 0x7f3376e016c0>

  File "/root/silk/silk/cli/__init__.py", line 94, in _main
    output = _main_dispatch(cfg.mode.command, cfg)
             │              │                 └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             │              └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             └ <function _main_dispatch at 0x7f3378055bd0>

  File "/root/silk/silk/cli/__init__.py", line 69, in _main_dispatch
    return module.main(cfg) #HERE GO SILK.CLI.TRAINING
           │      │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           │      └ <function main at 0x7f337821a830>
           └ <module 'silk.cli.training' from '/root/silk/silk/cli/training.py'>

  File "/root/silk/silk/cli/training.py", line 90, in main
    trainer.fit(model, train_loader, val_loader) #usually this becomes train
    │       │   │      │             └ <torch.utils.data.dataloader.DataLoader object at 0x7f3376ac2350>
    │       │   │      └ <torch.utils.data.dataloader.DataLoader object at 0x7f310df75630>
    │       │   └ SiLKRandomHomographies(
    │       │       (_module): MixedModuleDict(
    │       │         (_mods): ModuleDict(
    │       │           (model): SiLKVGG(
    │       │             (backbone): Pa...
    │       └ <function Trainer.fit at 0x7f313ce9b9a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>

  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 737, in fit
    self._call_and_handle_interrupt(
    │    └ <function Trainer._call_and_handle_interrupt at 0x7f313ce9b880>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 682, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           │           │       └ {}
           │           └ (SiLKRandomHomographies(
           │               (_module): MixedModuleDict(
           │                 (_mods): ModuleDict(
           │                   (model): SiLKVGG(
           │                     (backbone): P...
           └ <bound method Trainer._fit_impl of <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 772, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
    │    │    │                └ None
    │    │    └ SiLKRandomHomographies(
    │    │        (_module): MixedModuleDict(
    │    │          (_mods): ModuleDict(
    │    │            (model): SiLKVGG(
    │    │              (backbone): Pa...
    │    └ <function Trainer._run at 0x7f313cebc3a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1195, in _run
    self._dispatch()
    │    └ <function Trainer._dispatch at 0x7f313cebc5e0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1274, in _dispatch
    self.training_type_plugin.start_training(self)
    │    │                                   └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
    │    └ <property object at 0x7f313ce9fba0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 202, in start_training
    self._results = trainer.run_stage()
    │    │          │       └ <function Trainer.run_stage at 0x7f313cebc670>
    │    │          └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
    │    └ None
    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f313ceb2680>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1284, in run_stage
    return self._run_train()
           │    └ <function Trainer._run_train at 0x7f313cebc790>
           └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1306, in _run_train
    self._run_sanity_check(self.lightning_module)
    │    │                 │    └ <property object at 0x7f313cec0130>
    │    │                 └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
    │    └ <function Trainer._run_sanity_check at 0x7f313cebc940>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1370, in _run_sanity_check
    self._evaluation_loop.run()
    │    └ <property object at 0x7f313cec15d0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f310df76950>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ ()
    │    └ <function EvaluationLoop.advance at 0x7f313ce4cd30>
    └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f313ccdc850>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 109, in advance
    dl_outputs = self.epoch_loop.run(dataloader, dataloader_idx, dl_max_batches, self.num_dataloaders)
                 │    │          │   │           │               │               │    └ <property object at 0x7f313ce1bba0>
                 │    │          │   │           │               │               └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f313ccdc850>
                 │    │          │   │           │               └ 2
                 │    │          │   │           └ 0
                 │    │          │   └ <pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f310dc0bd00>
                 │    │          └ <function Loop.run at 0x7f313cfdeb00>
                 │    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f313ceb2e30>
                 └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f313ccdc850>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ (<pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f310dc0bd00>, 0, 2, 1)
    │    └ <function EvaluationEpochLoop.advance at 0x7f313ce39e10>
    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f313ceb2e30>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 123, in advance
    output = self._evaluation_step(batch, batch_idx, dataloader_idx)
             │    │                │      │          └ 0
             │    │                │      └ 0
             │    │                └ NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
             │    │                            [ 51,  51,  58,  ..., 141, 144, 138],
             │    │                     ...
             │    └ <function EvaluationEpochLoop._evaluation_step at 0x7f313ce3a290>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f313ceb2e30>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 215, in _evaluation_step
    output = self.trainer.accelerator.validation_step(step_kwargs)
             │    │                                   └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
             │    │                                               [ 51,  51,  58,  ....
             │    └ <property object at 0x7f313cf93b00>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f313ceb2e30>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/accelerators/accelerator.py", line 236, in validation_step
    return self.training_type_plugin.validation_step(*step_kwargs.values())
           │    │                    │                │           └ <method 'values' of 'collections.OrderedDict' objects>
           │    │                    │                └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │    │                    │                            [ 51,  51,  58,  ....
           │    │                    └ <function DDPPlugin.validation_step at 0x7f31800c5b40>
           │    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f313ceb2680>
           └ <pytorch_lightning.accelerators.gpu.GPUAccelerator object at 0x7f313ceb2dd0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/ddp.py", line 444, in validation_step
    return self.model(*args, **kwargs)
           │    │      │       └ {}
           │    │      └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │    │                  [ 51,  51,  58,  ..., 141, 144, 138],
           │    │          ...
           │    └ <property object at 0x7f31800b58a0>
           └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f313ceb2680>
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │    │                       [ 51,  51,  58,  ..., 141, 144, 138],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f3225fd05e0>
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │                         [ 51,  51,  58,  ..., 141, 144, 138],
           │                 ...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1523, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
         │    │                 │         └ {}
         │    │                 └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
         │    │                             [ 51,  51,  58,  ..., 141, 144, 138],
         │    │                     ...
         │    └ <function DistributedDataParallel._run_ddp_forward at 0x7f3225c0c280>
         └ DistributedDataParallel(
             (module): LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1359, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
           │            │         └ {}
           │            └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │                        [ 51,  51,  58,  ..., 141, 144, 138],
           │                ...
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │    │                       [ 51,  51,  58,  ..., 141, 144, 138],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f3225fd05e0>
           └ LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): MixedModuleDict(
                   (_mods): ModuleDict(
               ...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │                         [ 51,  51,  58,  ..., 141, 144, 138],
           │                 ...
           └ <bound method _LightningModuleWrapperBase.forward of LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_mo...
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/overrides/base.py", line 92, in forward
    output = self.module.validation_step(*inputs, **kwargs)
             │                            │         └ {}
             │                            └ (NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
             │                                        [ 51,  51,  58,  ..., 141, 144, 138],
             │                                ...
             └ LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): MixedModuleDict(
                     (_mods): ModuleDict(
                 ...

  File "/root/silk/silk/models/silk.py", line 527, in validation_step
    return self._total_loss(
           │    └ <function SiLKBase._total_loss at 0x7f3127923370>
           └ SiLKRandomHomographies(
               (_module): MixedModuleDict(
                 (_mods): ModuleDict(
                   (model): SiLKVGG(
                     (backbone): Pa...

  File "/root/silk/silk/models/silk.py", line 489, in _total_loss
    self._loss_fn(
    │    └ <silk.flow.FixedOutputFlow object at 0x7f3126358a00>
    └ SiLKRandomHomographies(
        (_module): MixedModuleDict(
          (_mods): ModuleDict(
            (model): SiLKVGG(
              (backbone): Pa...

  File "/root/silk/silk/flow.py", line 307, in __call__
    return self._flow.flow_from_tape(self._tape, self._output_indexes, inputs)
           │    │     │              │    │      │    │                └ {'batch': NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
           │    │     │              │    │      │    │                            [ 51,  51,  58,  ..., 141, 144,...
           │    │     │              │    │      │    └ (38, 39, 40, 41)
           │    │     │              │    │      └ <silk.flow.FixedOutputFlow object at 0x7f3126358a00>
           │    │     │              │    └ ((0, ()), (1, ()), (2, [0]), (3, ()), (4, ()), (5, ()), (6, ()), (7, ()), (8, ()), (9, ()), (10, ()), (11, ()), (12, [2]), (1...
           │    │     │              └ <silk.flow.FixedOutputFlow object at 0x7f3126358a00>
           │    │     └ <function Flow.flow_from_tape at 0x7f31320781f0>
           │    └ <silk.flow.Flow object at 0x7f312631bc70>
           └ <silk.flow.FixedOutputFlow object at 0x7f3126358a00>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'batch': NamedContext({'image_1': (tensor([[[[ 47,  50,  63,  ..., 155, 155, 152],
    │       │        │    │            │      │                    [ 51,  51,  58,  ..., 141, 144,...
    │       │        │    │            │      └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
    │       │        │    │            │          ...
    │       │        │    │            └ 17
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7f312792c670>, <silk.flow._InputExtraction object at 0x7f312792d750>, <silk.flow._Fu...
    │       │        └ <silk.flow.Flow object at 0x7f312631bc70>
    │       └ 17
    └ [None, None, None, None, None, torch.Size([1, 3, 164, 164]), tensor([[ 1.0000e+00,  7.3225e-04, -7.8408e-05, -1.1180e-03],
        ...

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7f3377ee84f0>
           │    │          │         │       └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    │          │         └ <property object at 0x7f3377ee84a0>
           │    │          └ <BoundArguments (outputs=('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms'), args=(), kwar...
           │    └ <bound method AutoForward.forward_flow of SiLKVGG(
           │        (backbone): ParametricVGG(
           │          (mp): Identity()
           │          (layers): ModuleList...
           └ <silk.flow._FunctionCall object at 0x7f310df74eb0>

  File "/root/silk/silk/flow.py", line 332, in forward_flow
    return self._flow(outputs, *args, **kwargs)
           │    │     │         │       └ {'images': tensor([[[[0.1762, 0.1788, 0.2341,  ..., 0.8827, 0.8827, 0.8792],
           │    │     │         │                   [0.2158, 0.1980, 0.1822,  ..., 0.8064,...
           │    │     │         └ ()
           │    │     └ ('normalized_descriptors', 'logits', 'sparse_positions', 'sparse_descriptors', 'nms')
           │    └ <silk.flow.Flow object at 0x7f3126358ac0>
           └ SiLKVGG(
               (backbone): ParametricVGG(
                 (mp): Identity()
                 (layers): ModuleList(
                   (0): Sequential(
                     (0): Sequ...

  File "/root/silk/silk/flow.py", line 244, in flow
    return self.flow_from_tape(tape, output_indexes, inputs)
           │    │              │     │               └ {'images': tensor([[[[0.1762, 0.1788, 0.2341,  ..., 0.8827, 0.8827, 0.8792],
           │    │              │     │                           [0.2158, 0.1980, 0.1822,  ..., 0.8064,...
           │    │              │     └ (10, 2, 14, 13, 6)
           │    │              └ ((0, ()), (1, [0]), (2, ()), (3, [1]), (4, ()), (5, [4]), (6, [5]), (7, ()), (8, [7]), (10, ()), (13, [3]), (14, [8]))
           │    └ <function Flow.flow_from_tape at 0x7f31320781f0>
           └ <silk.flow.Flow object at 0x7f3126358ac0>

  File "/root/silk/silk/flow.py", line 221, in flow_from_tape
    session[index] = self._transitions[index](session, inputs)
    │       │        │    │            │      │        └ {'images': tensor([[[[0.1762, 0.1788, 0.2341,  ..., 0.8827, 0.8827, 0.8792],
    │       │        │    │            │      │                    [0.2158, 0.1980, 0.1822,  ..., 0.8064,...
    │       │        │    │            │      └ [None, None, tensor([[[[-0.5741, -0.5957, -1.1516,  ...,  1.7753,  1.5811,  1.5946],
    │       │        │    │            │                  [-0.9289, -1.3242, -1.2969,  ....
    │       │        │    │            └ 13
    │       │        │    └ [<silk.flow._InputExtraction object at 0x7f3126358a30>, <silk.flow._FunctionCall object at 0x7f3126358250>, <silk.flow._Funct...
    │       │        └ <silk.flow.Flow object at 0x7f3126358ac0>
    │       └ 13
    └ [None, None, tensor([[[[-0.5741, -0.5957, -1.1516,  ...,  1.7753,  1.5811,  1.5946],
                [-0.9289, -1.3242, -1.2969,  ....

  File "/root/silk/silk/flow.py", line 97, in __call__
    return self._function(*arguments.args, **arguments.kwargs)
           │    │          │         │       │         └ <property object at 0x7f3377ee84f0>
           │    │          │         │       └ <BoundArguments (raw_descriptors=tensor([[[[-0.0068, -0.4549, -0.0390,  ...,  1.7369,  1.6629,  1.5750],
           │    │          │         │                   [ 0.2318, ...
           │    │          │         └ <property object at 0x7f3377ee84a0>
           │    │          └ <BoundArguments (raw_descriptors=tensor([[[[-0.0068, -0.4549, -0.0390,  ...,  1.7369,  1.6629,  1.5750],
           │    │                      [ 0.2318, ...
           │    └ functools.partial(<function SiLKVGG.sparsify_descriptors at 0x7f3127921510>, scale_factor=Parameter containing:
           │      tensor(1.4100...
           └ <silk.flow._FunctionCall object at 0x7f3126359ae0>

  File "/root/silk/silk/backbones/silk/silk.py", line 387, in sparsify_descriptors
    print("5 ", sparse_descriptors.requires_grad)
                └ [tensor([[ 0.2921,  0.0095, -0.1396,  ..., -0.0116, -0.0581, -0.0825],
                          [ 0.3700,  0.0402, -0.1068,  ...,  0.0076, -0....

AttributeError: 'list' object has no attribute 'requires_grad'
2025-02-21 06:55:08.449 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:55:39.719 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:55:39.720 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:55:42.651 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:55:46.819 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 06:56:32.075 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:56:32.076 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:56:35.034 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 06:56:44.295 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-21 06:56:44.296 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-21 06:56:44.296 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-21 06:59:54.316 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 06:59:54.317 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 06:59:57.185 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 07:00:06.194 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-21 07:00:06.195 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-21 07:00:06.195 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-21 07:05:27.227 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 07:05:27.227 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 07:05:30.107 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 07:05:48.747 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-21 07:05:48.748 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-21 07:05:48.748 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-21 07:09:49.954 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 07:09:49.954 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 07:09:52.831 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 07:19:07.741 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-21 07:19:07.742 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-21 07:19:07.742 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-21 07:19:52.454 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 07:19:52.455 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 07:19:55.394 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 07:20:06.098 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-21 07:20:06.099 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-21 07:20:06.099 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-21 07:33:33.834 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 07:33:33.835 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 07:33:36.827 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 07:33:41.552 | ERROR    | silk.cli:main:111 - An error has been caught in function 'main', process 'MainProcess' (36109), thread 'MainThread' (140235587273152):
Traceback (most recent call last):

  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
           │         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
           │         └ <code object <module> at 0x7f8b238e2e40, file "/root/silk/silk/cli/__main__.py", line 1>
           └ <function _run_code at 0x7f8b2439ef80>
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
         │     └ {'__name__': '__main__', '__doc__': None, '__package__': 'silk.cli', '__loader__': <_frozen_importlib_external.SourceFileLoad...
         └ <code object <module> at 0x7f8b238e2e40, file "/root/silk/silk/cli/__main__.py", line 1>

  File "/root/silk/silk/cli/__main__.py", line 24, in <module>
    main()
    └ <function main at 0x7f8b22fae440>

  File "/usr/local/lib/python3.10/dist-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
    └ <function _run_hydra at 0x7f8b23921d80>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
    └ <function _run_app at 0x7f8b23921e10>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
    └ <function run_and_report at 0x7f8b23921cf0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           └ <function _run_app.<locals>.<lambda> at 0x7f8b22e267a0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            │     └ <function Hydra.run at 0x7f8b2386b2e0>
            └ <hydra._internal.hydra.Hydra object at 0x7f8b230398d0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
          └ <function run_job at 0x7f8b23920ee0>
  File "/usr/local/lib/python3.10/dist-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
    │   │              │             └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │   │              └ <function main at 0x7f8b22fae3b0>
    │   └ <property object at 0x7f8b2394b0b0>
    └ JobReturn(overrides=['mode=train-silk'], cfg={'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'pytho...

  File "/root/silk/silk/cli/__main__.py", line 21, in main
    silk.cli.main(cfg)
    │    │   │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
    │    │   └ <function main at 0x7f8b22fad750>
    │    └ <module 'silk.cli' from '/root/silk/silk/cli/__init__.py'>
    └ <module 'silk' from '/root/silk/silk/__init__.py'>

> File "/root/silk/silk/cli/__init__.py", line 111, in main
    return _main(cfg, working_dir)
           │     │    └ '.'
           │     └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           └ <function _main at 0x7f8b22fad6c0>

  File "/root/silk/silk/cli/__init__.py", line 94, in _main
    output = _main_dispatch(cfg.mode.command, cfg)
             │              │                 └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             │              └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
             └ <function _main_dispatch at 0x7f8b24209bd0>

  File "/root/silk/silk/cli/__init__.py", line 69, in _main_dispatch
    return module.main(cfg) #HERE GO SILK.CLI.TRAINING
           │      │    └ {'formatter': {'_target_': 'silk.config.formatter.get_formatter', 'name': 'python'}, 'logger': {'handlers': {'stderr-dev': {'...
           │      └ <function main at 0x7f8b243ca830>
           └ <module 'silk.cli.training' from '/root/silk/silk/cli/training.py'>

  File "/root/silk/silk/cli/training.py", line 90, in main
    trainer.fit(model, train_loader, val_loader) #usually this becomes train
    │       │   │      │             └ <torch.utils.data.dataloader.DataLoader object at 0x7f8b22c825c0>
    │       │   │      └ <torch.utils.data.dataloader.DataLoader object at 0x7f88ca15d7e0>
    │       │   └ SiLKRandomHomographies(
    │       │       (_module): MixedModuleDict(
    │       │         (_mods): ModuleDict(
    │       │           (model): SiLKVGG(
    │       │             (backbone): Pa...
    │       └ <function Trainer.fit at 0x7f88e906b9a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>

  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 737, in fit
    self._call_and_handle_interrupt(
    │    └ <function Trainer._call_and_handle_interrupt at 0x7f88e906b880>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 682, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           │           │       └ {}
           │           └ (SiLKRandomHomographies(
           │               (_module): MixedModuleDict(
           │                 (_mods): ModuleDict(
           │                   (model): SiLKVGG(
           │                     (backbone): P...
           └ <bound method Trainer._fit_impl of <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 772, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
    │    │    │                └ None
    │    │    └ SiLKRandomHomographies(
    │    │        (_module): MixedModuleDict(
    │    │          (_mods): ModuleDict(
    │    │            (model): SiLKVGG(
    │    │              (backbone): Pa...
    │    └ <function Trainer._run at 0x7f88e8e903a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1195, in _run
    self._dispatch()
    │    └ <function Trainer._dispatch at 0x7f88e8e905e0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1274, in _dispatch
    self.training_type_plugin.start_training(self)
    │    │                                   └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
    │    └ <property object at 0x7f88e906f970>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 202, in start_training
    self._results = trainer.run_stage()
    │    │          │       └ <function Trainer.run_stage at 0x7f88e8e90670>
    │    │          └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
    │    └ None
    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f88e8e8abf0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1284, in run_stage
    return self._run_train()
           │    └ <function Trainer._run_train at 0x7f88e8e90790>
           └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1306, in _run_train
    self._run_sanity_check(self.lightning_module)
    │    │                 │    └ <property object at 0x7f88e906fec0>
    │    │                 └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
    │    └ <function Trainer._run_sanity_check at 0x7f88e8e90940>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1370, in _run_sanity_check
    self._evaluation_loop.run()
    │    └ <property object at 0x7f88e8e953a0>
    └ <pytorch_lightning.trainer.trainer.Trainer object at 0x7f88c1ffe1d0>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ ()
    │    └ <function EvaluationLoop.advance at 0x7f88e901cd30>
    └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f88c1ffde10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 109, in advance
    dl_outputs = self.epoch_loop.run(dataloader, dataloader_idx, dl_max_batches, self.num_dataloaders)
                 │    │          │   │           │               │               │    └ <property object at 0x7f88e8feb970>
                 │    │          │   │           │               │               └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f88c1ffde10>
                 │    │          │   │           │               └ 2
                 │    │          │   │           └ 0
                 │    │          │   └ <pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f88e8eba380>
                 │    │          └ <function Loop.run at 0x7f88e8fb2b00>
                 │    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f88e8e8be20>
                 └ <pytorch_lightning.loops.dataloader.evaluation_loop.EvaluationLoop object at 0x7f88c1ffde10>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/base.py", line 145, in run
    self.advance(*args, **kwargs)
    │    │        │       └ {}
    │    │        └ (<pytorch_lightning.utilities.fetching.DataFetcher object at 0x7f88e8eba380>, 0, 2, 1)
    │    └ <function EvaluationEpochLoop.advance at 0x7f88e9009e10>
    └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f88e8e8be20>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 123, in advance
    output = self._evaluation_step(batch, batch_idx, dataloader_idx)
             │    │                │      │          └ 0
             │    │                │      └ 0
             │    │                └ NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
             │    │                            [ 79, 128, 171,  ...,  49,  55,  38],
             │    │                     ...
             │    └ <function EvaluationEpochLoop._evaluation_step at 0x7f88e900a290>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f88e8e8be20>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 215, in _evaluation_step
    output = self.trainer.accelerator.validation_step(step_kwargs)
             │    │                                   └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
             │    │                                               [ 79, 128, 171,  ....
             │    └ <property object at 0x7f88e9167970>
             └ <pytorch_lightning.loops.epoch.evaluation_epoch_loop.EvaluationEpochLoop object at 0x7f88e8e8be20>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/accelerators/accelerator.py", line 236, in validation_step
    return self.training_type_plugin.validation_step(*step_kwargs.values())
           │    │                    │                │           └ <method 'values' of 'collections.OrderedDict' objects>
           │    │                    │                └ OrderedDict([('batch', NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
           │    │                    │                            [ 79, 128, 171,  ....
           │    │                    └ <function DDPPlugin.validation_step at 0x7f892c235b40>
           │    └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f88e8e8abf0>
           └ <pytorch_lightning.accelerators.gpu.GPUAccelerator object at 0x7f88e8e8b370>
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/plugins/training_type/ddp.py", line 444, in validation_step
    return self.model(*args, **kwargs)
           │    │      │       └ {}
           │    │      └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
           │    │                  [ 79, 128, 171,  ...,  49,  55,  38],
           │    │          ...
           │    └ <property object at 0x7f892c225d00>
           └ <pytorch_lightning.plugins.training_type.ddp.DDPPlugin object at 0x7f88e8e8abf0>
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
           │    │                       [ 79, 128, 171,  ...,  49,  55,  38],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f89d21e45e0>
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
           │                         [ 79, 128, 171,  ...,  49,  55,  38],
           │                 ...
           └ <bound method DistributedDataParallel.forward of DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1523, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
         │    │                 │         └ {}
         │    │                 └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
         │    │                             [ 79, 128, 171,  ...,  49,  55,  38],
         │    │                     ...
         │    └ <function DistributedDataParallel._run_ddp_forward at 0x7f89d1e20280>
         └ DistributedDataParallel(
             (module): LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/parallel/distributed.py", line 1359, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
           │            │         └ {}
           │            └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
           │                        [ 79, 128, 171,  ...,  49,  55,  38],
           │                ...
           └ DistributedDataParallel(
               (module): LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): Mixed...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           │    │           │       └ {}
           │    │           └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
           │    │                       [ 79, 128, 171,  ...,  49,  55,  38],
           │    │               ...
           │    └ <function Module._call_impl at 0x7f89d21e45e0>
           └ LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_module): MixedModuleDict(
                   (_mods): ModuleDict(
               ...
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           │             │       └ {}
           │             └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
           │                         [ 79, 128, 171,  ...,  49,  55,  38],
           │                 ...
           └ <bound method _LightningModuleWrapperBase.forward of LightningDistributedModule(
               (module): SiLKRandomHomographies(
                 (_mo...
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/overrides/base.py", line 92, in forward
    output = self.module.validation_step(*inputs, **kwargs)
             │                            │         └ {}
             │                            └ (NamedContext({'image_1': (tensor([[[[ 72,  94, 110,  ...,  33,  38,  57],
             │                                        [ 79, 128, 171,  ...,  49,  55,  38],
             │                                ...
             └ LightningDistributedModule(
                 (module): SiLKRandomHomographies(
                   (_module): MixedModuleDict(
                     (_mods): ModuleDict(
                 ...

  File "/root/silk/silk/models/silk.py", line 520, in validation_step
    return self._total_loss(
           │    └ <function SiLKBase._total_loss at 0x7f88d390f2e0>
           └ SiLKRandomHomographies(
               (_module): MixedModuleDict(
                 (_mods): ModuleDict(
                   (model): SiLKVGG(
                     (backbone): Pa...

  File "/root/silk/silk/models/silk.py", line 486, in _total_loss
    if math.isnan(actx_desc_loss):
                  └ tensor(10.8542, device='cuda:1')

NameError: name 'math' is not defined
2025-02-21 07:33:41.629 | ERROR    | silk.cli:main:113 - run failed, `*.log` file might be found in : .
2025-02-21 07:34:18.057 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 07:34:18.057 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 07:34:20.944 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 07:34:34.222 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-21 07:34:34.223 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-21 07:34:34.223 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
2025-02-21 07:35:16.022 | INFO     | silk.cli:_main:87 - run CLI in mode.command=training
2025-02-21 07:35:16.022 | SUCCESS  | silk.cli:_main:91 - formatter `python` successfully instantiated
2025-02-21 07:35:18.974 | SUCCESS  | silk.cli:_main_dispatch:68 - module `silk.cli.training` successfully imported
2025-02-21 07:36:04.796 | SUCCESS  | silk.cli:_main:95 - main dispatch successfully executed
2025-02-21 07:36:04.797 | SUCCESS  | silk.cli:_main:99 - formatter successfully converted output
2025-02-21 07:36:04.797 | SUCCESS  | silk.cli:_main:101 - ran successfully in working directory : .
