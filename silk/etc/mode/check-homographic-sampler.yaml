defaults:
  - check-defaults
  - /datasets/synthetic-shapes/training@loader.dataset
  - _self_

procedure: "homographic_sampler"

output:
  n_batches: 10 # number of images to sample
  directory: "./output" # output directory

# configure homographic sampler below
sampler:
  _target_: silk.transforms.cv.homography.RandomHomographicSampler
  batch_size: 16
  scaling_sampler:
    _target_: silk.config.sampler.Uniform
    min_value: 0.4
    max_value: 1.2
  x_rotation_sampler:
    _target_: silk.config.sampler.Uniform
    min_value: -0.78
    max_value: +0.78
  y_rotation_sampler:
    _target_: silk.config.sampler.Uniform
    min_value: -0.78
    max_value: +0.78
  z_rotation_sampler:
    _target_: silk.config.sampler.Uniform
    min_value: -1.57
    max_value: +1.57
  x_translation_sampler:
    _target_: silk.config.sampler.Uniform
    min_value: -1.0
    max_value: +1.0
  y_translation_sampler:
    _target_: silk.config.sampler.Uniform
    min_value: -1.0
    max_value: +1.0

  sampling_size: [120, 180]
  device: "cuda:0"

# dataset loader to extract images from
loader:
  _target_: torch.utils.data.DataLoader
  batch_size: 4
  num_workers: 12
  shuffle: false
  collate_fn: ${mode.collate_fn}
  worker_init_fn: ${mode.worker_init_fn}

worker_init_fn:
  _target_: silk.config.core.find_class_or_callable_from_target
  target: silk.datasets.abstract.RandomizedIterable.worker_init_fn

collate_fn:
  _target_: silk.transforms.tensor.AutoBatch
  transform:
    _target_: silk.transforms.abstract.Compose
    _args_:
      # convert tuples to named context
      - _target_: silk.transforms.abstract.Name
        _args_:
          - "image"
          - "positions"
      # convert numpy arrays to tensors
      - _target_: silk.transforms.abstract.Map
        function:
          _target_: silk.transforms.tensor.ToTensor
      # convert image from HWC to CHW format
      - _target_: silk.transforms.abstract.MapOnly
        names:
          - "image"
        function:
          _target_: silk.transforms.cv.image.HWCToCHW
